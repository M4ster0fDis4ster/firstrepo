name: GitHub Actions Practice

on:
  push:
    branches:
        - github-actions-practice

jobs:

    edidotconfig:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
     
            - name: Check .editorconfig
              uses: actions/setup-python@v3

    pylint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Run Python linter - pylint
              uses: cclauss/GitHub-Action-for-pylint@0.7.0
    black:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Run Python linter - black
              uses: psf/black@stable

    markdown:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Run markdown linter
              uses: nosborn/github-action-markdown-cli@v3.3.0
              with:
                files: README.md
    
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                    python-version: 3.12
            
            - name: Install dependencies
              working-directory: ./Containers-python-app
              run: python -m pip install -r requirements.txt

            - name: Run tests
              working-directory: ./Containers-python-app/app
              run: python -m unittest app_test.py

    gitleaks_check:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: gitleaks/gitleaks-action@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    sonarcloud:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - uses: AppThreat/sast-scan-action@master
              with:
                type: "python"

    sca:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Run Snyk to check for vulnerabilities
              uses: snyk/actions/python-3.10@master
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
              with:
                args: --severity-threshold=high
    
    build-and-push-image:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            
            - name: Docker setup
              uses: docker/setup-buildx-action@v3

            - name: Build and push image to local repository
                  uses: docker/build-push-action@v5
                  id: build
                  with:
                    context: .
                    load: true

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
                format: 'table'
                exit-code: '1'
                ignore-unfixed: true
                vuln-type: 'os,library'
                severity: 'CRITICAL,HIGH'

            - name: Login to Docker Hub
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
              env:
                DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
                DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                images: my-docker-hub-namespace/my-docker-hub-repository
                            
            - name: Build and push Docker image
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

#       - name: Build and push Docker image
#         run: |
#           docker build -t m4ster0fdis4ster/nginx-homework:latest .
#           docker push m4ster0fdis4ster/nginx-homework:latest
#         env:
#           DOCKER_BUILDKIT: 1


